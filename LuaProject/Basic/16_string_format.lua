-- 格式字符串可能包含以下的转义码:
-- %c - 接受一个数字, 并将其转化为ASCII码表中对应的字符
-- %d, %i - 接受一个数字并将其转化为有符号的整数格式
-- %o - 接受一个数字并将其转化为八进制数格式
-- %u - 接受一个数字并将其转化为无符号整数格式
-- %x - 接受一个数字并将其转化为十六进制数格式, 使用小写字母
-- %X - 接受一个数字并将其转化为十六进制数格式, 使用大写字母
-- %e - 接受一个数字并将其转化为科学记数法格式, 使用小写字母e
-- %E - 接受一个数字并将其转化为科学记数法格式, 使用大写字母E
-- %f - 接受一个数字并将其转化为浮点数格式
-- %g(%G) - 接受一个数字并将其转化为%e(%E, 对应%G)及%f中较短的一种格式
-- %q - 接受一个字符串并将其转化为可安全被Lua编译器读入的格式
-- %s - 接受一个字符串并按照给定的参数格式化该字符串
-- 为进一步细化格式, 可以在%号后添加参数. 参数将以如下的顺序读入:
-- (1) 符号: 一个+号表示其后的数字转义符将让正数显示正号. 默认情况下只有负数显示符号.
-- (2) 占位符: 一个0, 在后面指定了字串宽度时占位用. 不填时的默认占位符是空格.
-- (3) 对齐标识: 在指定了字串宽度时, 默认为右对齐, 增加-号可以改为左对齐.
-- (4) 宽度数值
-- (5) 小数位数/字串裁切: 在宽度数值后增加的小数部分n, 若后接f(浮点数转义符, 如%6.3f)则设定该浮点数的小数只保留n位, 若后接s(字符串转义符, 如%5.3s)则设定该字符串只显示前n位.

print(string.format("%s %s", "hello", "lua"))
print(string.format("date format:%02d/%02d/%02d", 1, 2, 2017))
print(string.format( "%.4f",1/3))

--其他例子
string.format("%c", 83)                 --输出S                  
string.format("%+d", 17.0)              --输出+17
string.format("%05d", 17)               --输出00017
string.format("%o", 17)                 --输出21
-- string.format("%u", 3.14)               --输出3
string.format("%x", 13)                 --输出d
string.format("%X", 13)                 --输出D
string.format("%e", 1000)               --输出1.000000e+03
string.format("%E", 1000)               --输出1.000000E+03
string.format("%6.3f", 13)              --输出13.000
string.format("%q", "One\nTwo")         --输出"One\
                                        --"Two"
string.format("%s", "monkey")           --输出monkey
string.format("%10s", "monkey")         --输出  monkey
string.format("%5.3s", "monkey")        --输出  mon

print(string.format( "%1.3f",13 ))      --?????????????